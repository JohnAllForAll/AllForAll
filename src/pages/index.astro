---
export const prerender = false;
import { createSupabaseServerClient } from '../lib/supabaseServer';
import Layout from '../layouts/Layout.astro';
import VideoCard from '../components/VideoCard.astro';

const supabase = createSupabaseServerClient(Astro.cookies);

const { data: { user }, error } = await supabase.auth.getUser();

if (error || !user) {
  return Astro.redirect('/login');
}

// Get user profile data
const { data: profile } = await supabase
  .from('profiles')
  .select('username, avatar_url')
  .eq('id', user.id)
  .single();

// Provide fallback for profile data
const profileData = profile || { username: user.email?.split('@')[0] || 'Usuario', avatar_url: null };

// Get videos from Supabase
const { data: videos, error: videosError } = await supabase
  .from('videos')
  .select('id, title, description, thumbnail, created_at')
  .order('created_at', { ascending: false });

console.log('Videos query result:', { videos, videosError, count: videos?.length });

// Get user's favorites to show in "Continue Watching"
const { data: favorites, error: favoritesError } = await supabase
  .from('favorites')
  .select(`
    video_id,
    videos (id, title, description, thumbnail, created_at)
  `)
  .eq('user_id', user.id)
  .order('created_at', { ascending: false })
  .limit(4);

console.log('Favorites query result:', { favorites, favoritesError, count: favorites?.length });

const favoriteVideos = (favorites?.map((fav: any) => fav.videos).filter(Boolean) as any[] || []).map((video: any) => ({
  ...video,
  thumbnail_url: video.thumbnail // Map thumbnail to thumbnail_url for compatibility
}));

// Organize videos into sections
const allVideos = (videos || []).map((video: any) => ({
  ...video,
  thumbnail_url: video.thumbnail // Map thumbnail to thumbnail_url for compatibility
}));

// Featured video (most recent)
const featuredVideo = allVideos[0] || {
  id: 'default',
  title: 'Bienvenido a VideoHub',
  description: 'Descubre contenido increíble en nuestra plataforma de streaming premium',
  thumbnail_url: 'https://images.unsplash.com/photo-1489599142194-79b1bf746a41?w=1920&h=1080&fit=crop',
  video_url: '',
  duration: '0m',
  views: 0,
  created_at: new Date().toISOString()
};

// Continue watching (user's favorites)
const continueWatching = favoriteVideos.slice(0, 6);

// Recommended (random selection from videos)
const recommended = allVideos.slice(1, 8);

// Trending (most recent videos)
const trending = allVideos.slice(0, 8);
---

<Layout title="Home - HBU" user={user} profile={profile}>

  <!-- Main Content -->
  <main class="min-h-screen bg-black">
    <!-- Hero Section -->
    <section class="relative h-screen overflow-hidden">
      <!-- Background Image with Overlay -->
      <div class="absolute inset-0">
        <div class="relative w-full h-full">
          <img
            src={featuredVideo.thumbnail_url}
            alt={featuredVideo.title}
            class="w-full h-full object-cover scale-105 transition-transform duration-[20s] hover:scale-100"
            onerror="this.src='https://images.unsplash.com/photo-1489599142194-79b1bf746a41?w=1920&h=1080&fit=crop'"
          />
          <!-- Elegant Gradient Overlays -->
          <div class="absolute inset-0 bg-gradient-to-r from-black via-black/70 to-transparent"></div>
          <div class="absolute inset-0 bg-gradient-to-t from-black via-transparent to-black/20"></div>
          <div class="absolute inset-0 bg-gradient-to-b from-transparent via-transparent to-black/90"></div>
        </div>
      </div>

      <!-- Floating Elements -->


      <!-- Content -->
      <div class="relative z-10 h-full flex items-center">
        <div class="w-[98%] mx-auto px-6">
          <div class="max-w-3xl space-y-8">
            <!-- Featured Badge -->
            <div class="inline-flex items-center px-6 py-2 rounded-full bg-white/5 backdrop-blur-xl border border-white/10 shadow-2xl">
              <div class="w-2 h-2 bg-yellow-400 rounded-full mr-3 animate-pulse"></div>
              <span class="text-white text-sm font-medium tracking-wide">DESTACADO HOY</span>
            </div>

            <!-- Title with Animation -->
            <div class="space-y-4">
              <h1 class="text-5xl md:text-7xl lg:text-8xl font-black text-white leading-none tracking-tight animate-fade-in-up">
                {featuredVideo.title}
              </h1>
              <div class="w-24 h-1 bg-gradient-to-r from-white via-white/50 to-transparent rounded-full"></div>
            </div>

            <!-- Description -->
            <p class="text-xl text-white/80 leading-relaxed max-w-2xl font-light">
              {featuredVideo.description}
            </p>
            
            <!-- Metadata with Icons -->
            <div class="flex items-center gap-8 text-white/60">
              <div class="flex items-center gap-2 bg-white/5 px-4 py-2 rounded-full backdrop-blur-sm">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="1.5">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M2.036 12.322a1.012 1.012 0 010-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178z"/>
                  <path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
                </svg>
                <span class="text-sm font-medium">1.2M views</span>
              </div>
              <div class="flex items-center gap-2 bg-white/5 px-4 py-2 rounded-full backdrop-blur-sm">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="1.5">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z"/>
                </svg>
                <span class="text-sm font-medium">2h 15m</span>
              </div>
              <div class="flex items-center gap-3">
                <span class="px-3 py-1 bg-gradient-to-r from-purple-500/20 to-pink-500/20 border border-purple-400/30 rounded-full text-xs font-semibold text-purple-200 backdrop-blur-sm">4K UHD</span>
                <span class="px-3 py-1 bg-gradient-to-r from-green-500/20 to-emerald-500/20 border border-green-400/30 rounded-full text-xs font-semibold text-green-200 backdrop-blur-sm">HDR</span>
              </div>
            </div>
            
            <!-- Action Buttons -->
            <div class="flex items-center gap-4 pt-6">
              <button class="group flex items-center gap-3 bg-white/10 backdrop-blur-xl text-white px-8 py-4 rounded-2xl font-medium border border-white/20 transition-all duration-500 hover:bg-white/20 hover:border-white/40 hover:scale-105 active:scale-95">
                <svg class="w-6 h-6 transition-transform group-hover:scale-110" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="1.5">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z"/>
                </svg>
                <span class="tracking-wide">Más info</span>
              </button>

              <button class="group flex items-center justify-center w-14 h-14 bg-white/10 backdrop-blur-xl text-white rounded-2xl border border-white/20 transition-all duration-500 hover:bg-white/20 hover:border-white/40 hover:scale-105 active:scale-95">
                <svg class="w-6 h-6 transition-all group-hover:scale-110 group-hover:fill-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="1.5">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12z"/>
                </svg>
              </button>
            </div>
          </div>
        </div>
      </div>

      <!-- Scroll Indicator -->
      <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 z-10">
        <div class="flex flex-col items-center space-y-2 animate-bounce">
          <div class="w-6 h-10 border-2 border-white/30 rounded-full flex justify-center">
            <div class="w-1 h-3 bg-white/60 rounded-full mt-2 animate-pulse"></div>
          </div>
          <span class="text-white/60 text-xs tracking-widest">SCROLL</span>
        </div>
      </div>
    </section>

    <!-- Content Sections with improved spacing -->
    <div class="bg-black relative -mt-32 pt-32 z-20">
      
      <!-- Continue Watching -->
      {continueWatching.length > 0 && (
        <section class="py-16">
          <div class="w-[98%] mx-auto px-6">
            <div class="flex items-center gap-4 mb-10">
              <div class="w-1 h-8 bg-gradient-to-b from-white/60 to-white/20 rounded-full"></div>
              <h2 class="text-2xl font-light text-white tracking-wide">Continuar viendo</h2>
              <div class="flex-1 h-px bg-gradient-to-r from-white/10 to-transparent ml-6"></div>
            </div>
            
            <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6 gap-4">
              {continueWatching.map((video) => (
                <a 
                  href={`/movie/${video.id}`}
                  class="group cursor-pointer block"
                >
                  <div class="relative aspect-video overflow-hidden rounded-xl bg-white/5 border border-white/10 group-hover:border-white/20 transition-all duration-500 group-hover:scale-105">
                    <img
                      src={video.thumbnail_url || video.thumbnail || 'https://images.unsplash.com/photo-1489599142194-79b1bf746a41?w=640&h=360&fit=crop'}
                      alt={video.title}
                      class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-110"
                      loading="lazy"
                      onerror="this.src='https://images.unsplash.com/photo-1489599142194-79b1bf746a41?w=640&h=360&fit=crop'"
                    />
                    <!-- Glass overlay -->
                    <div class="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                    
                    <!-- Play button overlay -->
                    <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-all duration-300">
                      <div class="w-12 h-12 bg-white/20 backdrop-blur-md rounded-full flex items-center justify-center border border-white/30 group-hover:scale-110 transition-transform duration-300">
                        <svg class="w-6 h-6 text-white ml-1" fill="currentColor" viewBox="0 0 24 24">
                          <path d="M8 5v14l11-7z"/>
                        </svg>
                      </div>
                    </div>

                    <!-- Progress bar for continue watching -->
                    <div class="absolute bottom-0 left-0 right-0 h-1 bg-white/20">
                      <div class="h-full bg-white/60 rounded-full" style="width: 45%"></div>
                    </div>
                  </div>
                  
                  <div class="mt-3 space-y-1">
                    <h3 class="text-white/90 text-sm font-medium line-clamp-2 group-hover:text-white transition-colors">
                      {video.title}
                    </h3>
                    <p class="text-white/50 text-xs">45% completado</p>
                  </div>
                </a>
              ))}
            </div>
          </div>
        </section>
      )}

      <!-- Recommended -->
      <section class="py-16">
        <div class="w-[98%] mx-auto px-6">
          <div class="flex items-center gap-4 mb-10">
            <div class="w-1 h-8 bg-gradient-to-b from-white/60 to-white/20 rounded-full"></div>
            <h2 class="text-2xl font-light text-white tracking-wide">Recomendado para ti</h2>
            <div class="flex-1 h-px bg-gradient-to-r from-white/10 to-transparent ml-6"></div>
          </div>
          
          <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6 gap-4">
            {recommended.length > 0 ? (
              recommended.map((video) => (
                <a
                  href={`/movie/${video.id}`}
                  class="group cursor-pointer block"
                >
                  <div class="relative aspect-[2/3] overflow-hidden rounded-xl bg-white/5 border border-white/10 group-hover:border-white/20 transition-all duration-500 group-hover:scale-105">
                    <img
                      src={video.thumbnail_url || video.thumbnail || 'https://images.unsplash.com/photo-1489599142194-79b1bf746a41?w=640&h=360&fit=crop'}
                      alt={video.title}
                      class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-110"
                      loading="lazy"
                      onerror="this.src='https://images.unsplash.com/photo-1489599142194-79b1bf746a41?w=640&h=360&fit=crop'"
                    />
                    <!-- Glass overlay -->
                    <div class="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                    
                    <!-- Quality badge -->
                    <div class="absolute top-2 left-2 px-2 py-1 bg-white/20 backdrop-blur-sm rounded text-white text-xs font-medium border border-white/30">
                      4K
                    </div>

                    <!-- Play button overlay -->
                    <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-all duration-300">
                      <div class="w-12 h-12 bg-white/20 backdrop-blur-md rounded-full flex items-center justify-center border border-white/30 group-hover:scale-110 transition-transform duration-300">
                        <svg class="w-6 h-6 text-white ml-1" fill="currentColor" viewBox="0 0 24 24">
                          <path d="M8 5v14l11-7z"/>
                        </svg>
                      </div>
                    </div>

                    <!-- Favorite button -->
                    <button
                      class="absolute top-2 right-2 w-8 h-8 bg-black/60 backdrop-blur-sm rounded-full flex items-center justify-center text-white/70 hover:text-red-400 transition-colors border border-white/20 opacity-0 group-hover:opacity-100"
                      onclick={`event.stopPropagation(); toggleFavoriteVideo(this, '${video.id}')`}
                    >
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="2">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12z"/>
                      </svg>
                    </button>
                  </div>
                  
                  <div class="mt-3 space-y-1">
                    <h3 class="text-white/90 text-sm font-medium line-clamp-2 group-hover:text-white transition-colors">
                      {video.title}
                    </h3>
                    <div class="flex items-center text-white/50 text-xs space-x-3">
                      <span class="flex items-center gap-1">
                        <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 24 24">
                          <path d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"/>
                        </svg>
                        4.8
                      </span>
                      <span>•</span>
                      <span>Nuevo</span>
                    </div>
                  </div>
                </a>
              ))
            ) : (
              <div class="col-span-full flex flex-col items-center justify-center py-24">
                <div class="w-16 h-16 bg-white/5 rounded-2xl flex items-center justify-center mb-4 border border-white/10">
                  <svg class="w-8 h-8 text-white/40" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                  </svg>
                </div>
                <h3 class="text-white/60 text-lg font-medium mb-2">Personalizando</h3>
                <p class="text-white/40 text-sm text-center max-w-md">Analizando tus preferencias para mejor contenido</p>
              </div>
            )}
          </div>
        </section>
      </section>

       <!-- Categories -->
      <section class="py-16">
        <div class="container mx-auto px-8 lg:px-12">
          <div class="flex items-center gap-4 mb-10">
            <div class="w-1 h-8 bg-gradient-to-b from-white/60 to-white/20 rounded-full"></div>
            <h2 class="text-2xl font-light text-white tracking-wide">Explorar géneros</h2>
            <div class="flex-1 h-px bg-gradient-to-r from-white/10 to-transparent ml-6"></div>
          </div>
          
          <div class="grid grid-cols-3 md:grid-cols-6 gap-4">
            {[
              { name: 'Acción', icon: 'M13 10V3L4 14h7v7l9-11h-7z' },
              { name: 'Drama', icon: 'M7 4V2a1 1 0 011-1h8a1 1 0 011 1v2h4a1 1 0 110 2h-1v14a2 2 0 01-2 2H6a2 2 0 01-2-2V6H3a1 1 0 110-2h4z' },
              { name: 'Comedia', icon: 'M14.828 14.828a4 4 0 01-5.656 0M9 10h1m4 0h1m-6 4h8m-4-8V3a1 1 0 011-1h2a1 1 0 011 1v3M8 21l4-4 4 4' },
              { name: 'Terror', icon: 'M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z' },
              { name: 'Sci-Fi', icon: 'M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z' },
              { name: 'Documentales', icon: 'M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z' }
            ].map((genre, index) => (
              <button class="group p-4 bg-white/5 hover:bg-white/10 backdrop-blur-sm rounded-xl border border-white/10 hover:border-white/20 hover:scale-105 transition-all duration-300 active:scale-95">
                <div class="flex flex-col items-center space-y-3">
                  <svg class="w-6 h-6 text-white/70 group-hover:text-white transition-colors duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="1.5">
                    <path stroke-linecap="round" stroke-linejoin="round" d={genre.icon}/>
                  </svg>
                  <span class="text-white/70 group-hover:text-white text-xs font-medium transition-colors duration-300">{genre.name}</span>
                </div>
              </button>
            ))}
          </div>
        </div>
      </section>
    </div>

  <!-- Enhanced Footer -->
  <footer class="bg-gradient-to-t from-black via-black to-transparent border-t border-white/5 pt-20 pb-12">
    <div class="container mx-auto px-8 lg:px-12">
      <div class="grid grid-cols-1 md:grid-cols-4 gap-12">
        <div class="md:col-span-2">
          <div class="flex items-center gap-3 mb-6">
            <div class="w-8 h-8 bg-gradient-to-br from-white to-white/70 rounded-lg flex items-center justify-center">
              <svg class="w-5 h-5 text-black" fill="currentColor" viewBox="0 0 24 24">
                <path d="M8 5v14l11-7z"/>
              </svg>
            </div>
            <h3 class="text-2xl font-bold text-white tracking-wide">VIDEOHUB</h3>
          </div>
          <p class="text-white/60 text-base leading-relaxed max-w-md mb-8">
            La plataforma de streaming premium que redefine tu experiencia audiovisual. Contenido exclusivo en la más alta calidad.
          </p>
          <div class="flex space-x-4">
            {[
              { icon: 'M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z', name: 'X' },
              { icon: 'M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z', name: 'Twitter' },
              { icon: 'M22.46 6c-.77.35-1.6.58-2.46.69.88-.53 1.56-1.37 1.88-2.38-.83.5-1.75.85-2.72 1.05C18.37 4.5 17.26 4 16 4c-2.35 0-4.27 1.92-4.27 4.29 0 .34.04.67.11.98C8.28 9.09 5.11 7.38 3 4.79c-.37.63-.58 1.37-.58 2.15 0 1.49.75 2.81 1.91 3.56-.71 0-1.37-.2-1.95-.5v.03c0 2.08 1.48 3.82 3.44 4.21a4.22 4.22 0 01-1.93.07 4.28 4.28 0 004 2.98 8.521 8.521 0 01-5.33 1.84c-.34 0-.68-.02-1.02-.06C3.44 20.29 5.7 21 8.12 21 16 21 20.33 14.46 20.33 8.79c0-.19 0-.37-.01-.56.84-.6 1.56-1.36 2.14-2.23z', name: 'Twitter Alt' }
            ].map((social, i) => (
              <a href="#" class="group w-12 h-12 bg-white/5 hover:bg-white/15 rounded-xl flex items-center justify-center text-white/60 hover:text-white transition-all duration-300 hover:scale-110 backdrop-blur-sm border border-white/10 hover:border-white/20">
                <svg class="w-5 h-5 transition-transform group-hover:scale-110" fill="currentColor" viewBox="0 0 24 24">
                  <path d={social.icon}/>
                </svg>
              </a>
            ))}
          </div>
        </div>
        
        <div>
          <h4 class="text-white font-semibold mb-6 text-lg tracking-wide">Contenido</h4>
          <ul class="space-y-4 text-white/60">
            <li><a href="#" class="hover:text-white transition-colors duration-300 flex items-center gap-2 group">
              <div class="w-1 h-1 bg-white/40 rounded-full group-hover:bg-white transition-colors"></div>
              Películas
            </a></li>
            <li><a href="#" class="hover:text-white transition-colors duration-300 flex items-center gap-2 group">
              <div class="w-1 h-1 bg-white/40 rounded-full group-hover:bg-white transition-colors"></div>
              Series
            </a></li>
            <li><a href="#" class="hover:text-white transition-colors duration-300 flex items-center gap-2 group">
              <div class="w-1 h-1 bg-white/40 rounded-full group-hover:bg-white transition-colors"></div>
              Documentales
            </a></li>
            <li><a href="#" class="hover:text-white transition-colors duration-300 flex items-center gap-2 group">
              <div class="w-1 h-1 bg-white/40 rounded-full group-hover:bg-white transition-colors"></div>
              Originales
            </a></li>
          </ul>
        </div>
        
        <div>
          <h4 class="text-white font-semibold mb-6 text-lg tracking-wide">Soporte</h4>
          <ul class="space-y-4 text-white/60">
            <li><a href="#" class="hover:text-white transition-colors duration-300 flex items-center gap-2 group">
              <div class="w-1 h-1 bg-white/40 rounded-full group-hover:bg-white transition-colors"></div>
              Centro de ayuda
            </a></li>
            <li><a href="#" class="hover:text-white transition-colors duration-300 flex items-center gap-2 group">
              <div class="w-1 h-1 bg-white/40 rounded-full group-hover:bg-white transition-colors"></div>
              Contacto
            </a></li>
            <li><a href="#" class="hover:text-white transition-colors duration-300 flex items-center gap-2 group">
              <div class="w-1 h-1 bg-white/40 rounded-full group-hover:bg-white transition-colors"></div>
              Términos
            </a></li>
            <li><a href="#" class="hover:text-white transition-colors duration-300 flex items-center gap-2 group">
              <div class="w-1 h-1 bg-white/40 rounded-full group-hover:bg-white transition-colors"></div>
              Privacidad
            </a></li>
          </ul>
        </div>
      </div>
      
      <!-- Divider -->
      <div class="h-px bg-gradient-to-r from-transparent via-white/10 to-transparent my-12"></div>
      
      <!-- Bottom Footer -->
      <div class="flex flex-col md:flex-row items-center justify-between gap-6">
        <div class="flex items-center gap-6">
          <p class="text-white/40 text-sm">&copy; 2024 VideoHub. Todos los derechos reservados.</p>
          <div class="hidden md:flex items-center gap-4">
            <span class="w-2 h-2 bg-green-400 rounded-full animate-pulse"></span>
            <span class="text-white/60 text-sm">Servicio operativo</span>
          </div>
        </div>
        
        <div class="flex items-center gap-4 text-white/40 text-xs">
          <span class="px-3 py-1 bg-white/5 rounded-full backdrop-blur-sm">v2.1.0</span>
          <span>Última actualización: Hoy</span>
        </div>
      </div>
    </div>
  </footer>
</Layout>

<style>
  /* Enhanced Scrollbar */
  ::-webkit-scrollbar {
    width: 4px;
    height: 4px;
  }

  ::-webkit-scrollbar-track {
    background: transparent;
  }

  ::-webkit-scrollbar-thumb {
    background: linear-gradient(180deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1));
    border-radius: 2px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: linear-gradient(180deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.2));
  }

  * {
    scrollbar-width: thin;
    scrollbar-color: rgba(255, 255, 255, 0.2) transparent;
  }

  /* Smooth animations */
  html {
    scroll-behavior: smooth;
  }

  /* Custom animations */
  @keyframes fade-in-up {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fade-in-up {
    animation: fade-in-up 1s ease-out;
  }

  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
  }

  .animate-float {
    animation: float 3s ease-in-out infinite;
  }

  /* Glass morphism effects */
  .backdrop-blur-xl {
    backdrop-filter: blur(16px);
    -webkit-backdrop-filter: blur(16px);
  }

  /* Enhanced focus states */
  button:focus-visible,
  a:focus-visible {
    outline: 2px solid rgba(255, 255, 255, 0.6);
    outline-offset: 3px;
    border-radius: 1rem;
    transition: all 0.3s ease;
  }

  /* Gradient animations */
  @keyframes gradient-shift {
    0%, 100% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
  }

  .animate-gradient {
    background-size: 200% 200%;
    animation: gradient-shift 3s ease infinite;
  }

  /* Improved transitions for all elements */
  * {
    transition-property: color, background-color, border-color, opacity, transform, box-shadow, backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
  }

  /* Custom hover effects */
  .hover-glow:hover {
    box-shadow: 0 0 30px rgba(255, 255, 255, 0.1);
  }

  /* Improved backdrop blur fallback */
  @supports not (backdrop-filter: blur(16px)) {
    .backdrop-blur-xl {
      background-color: rgba(0, 0, 0, 0.8);
    }
    
    .backdrop-blur-sm {
      background-color: rgba(0, 0, 0, 0.6);
    }
  }

  /* Loading states */
  @keyframes shimmer {
    0% { background-position: -1000px 0; }
    100% { background-position: 1000px 0; }
  }

  .shimmer {
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.1), transparent);
    background-size: 1000px 100%;
    animation: shimmer 2s infinite;
  }

  /* Enhanced responsive design */
  @media (max-width: 768px) {
    .animate-fade-in-up {
      animation-duration: 0.8s;
    }
  }

  /* Dark mode optimizations */
  @media (prefers-color-scheme: dark) {
    * {
      color-scheme: dark;
    }
  }

  /* Reduce motion for accessibility */
  @media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }
  }
</style>

<script>
  // Favorite video toggle function
  function toggleFavoriteVideo(button: HTMLElement, videoId: string, event?: Event) {
    // Prevent event bubbling
    event?.stopPropagation();

    // Toggle visual state
    const icon = button.querySelector('svg path');
    const isFavorited = button.classList.contains('favorited');

    if (isFavorited) {
      button.classList.remove('favorited');
      icon?.setAttribute('fill', 'none');
      // Here you would make an API call to remove from favorites
      console.log('Removed from favorites:', videoId);
    } else {
      button.classList.add('favorited');
      icon?.setAttribute('fill', 'currentColor');
      // Here you would make an API call to add to favorites
      console.log('Added to favorites:', videoId);
    }
  }

  // Initialize smooth scrolling and other enhancements
  document.addEventListener('DOMContentLoaded', function() {
    // Add intersection observer for fade-in animations
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-fade-in-up');
        }
      });
    }, observerOptions);

    // Observe all sections
    document.querySelectorAll('section').forEach(section => {
      observer.observe(section);
    });

    // Enhanced scroll indicator
    const scrollIndicator = document.querySelector('.animate-bounce') as HTMLElement;
    if (scrollIndicator) {
      window.addEventListener('scroll', () => {
        const scrollY = window.scrollY;
        if (scrollY > 100) {
          scrollIndicator.style.opacity = '0';
        } else {
          scrollIndicator.style.opacity = '1';
        }
      });
    }

    // Add loading states for images
    document.querySelectorAll('img').forEach(img => {
      img.addEventListener('load', function() {
        this.classList.add('loaded');
      });
    });
  });

  // Add global error handling
  window.addEventListener('error', function(e) {
    console.error('Error occurred:', e.error);
  });

  // Performance optimization
  if ('requestIdleCallback' in window) {
    requestIdleCallback(() => {
      // Preload critical resources
      const criticalImages = document.querySelectorAll('img[data-preload]');
      criticalImages.forEach(img => {
        const link = document.createElement('link');
        link.rel = 'preload';
        link.as = 'image';
        link.href = img.getAttribute('src') || '';
        document.head.appendChild(link);
      });
    });
  }
</script>


